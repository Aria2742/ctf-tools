0
24 -> I = 0
25 -> M = 0
26 -> N = 1
27 -> P = 0
28 -> Q = 0
	setup complete
29 -> B = 0xE5
30 -> B = B + I
31 -> if B == 0: goto 56
32 -> B = 0x80
33 -> B = B + I
34 -> A = LD(B) = Flag[I]
	read flag[0]
35 -> B = LD(I) = ROM[I]
	read rom[0]
36 -> R = 1
37 -> goto 12
	pass complete
12 -> X = 1
13 -> Y = 0
14 -> if X == 0: goto 22
15 -> Z = X
16 -> Z = Z & B
17 -> if Z == 0: goto 19
18 -> Y = Y + A
19 -> X = X + X
20 -> A = A + A
21 -> goto 14
22 -> A = Y
23 -> goto 1
	pass complete
1 -> R = !R
2 -> Z = 1
3 -> R = R + Z
4 -> R = R + Z
5 -> if R == 0: goto 38 (always True???)
38 -> O = M
39 -> O = O + N
40 -> M = N
41 -> N = O
42 -> A = A + M
43 -> B = 0x20
44 -> B = B + I
45 -> C = LD(B) = ROM[0x20 + I]
	read rom[0x20]
46 -> A = A ^ C
47 -> P = P + A
48 -> B = 0x40
49 -> B = B + I
50 -> A = LD(B) = ROM[0x40 + I]
	read rom[0x40]
51 -> A = A ^ P
52 -> Q = Q | A (A == 0 to get flag)
53 -> A = 1
54 -> I = I + A
55 -> goto 29
	pass complete
	I incremented
29
30
31
32
33
34
	read flag[1]
35
	read rom[1]
36
37
	pass complete
12
13
14
22
23
	pass compelte
1
2
3
4
5
38
39
40
41
42
43
44
45
	read rom[0x21]
46
47
48
49
50
	read rom[0x41]
51
52
53
54
55
	pass complete
	I incremented